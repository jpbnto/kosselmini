#############################
#       MCU & ADXL345       #
#############################

[mcu adxl]
serial: /dev/serial/by-id/usb-Klipper_rp2040_E660C0D1C751352F-if00

[adxl345]
cs_pin: adxl:gpio1
spi_bus: spi0a
axes_map: x,z,y

[resonance_tester]
accel_chip: adxl345
probe_points:
    0, 0, 10  # an example

# This script will generate the charts
# ~/klipper/scripts/calibrate_shaper.py /tmp/resonances_x_*.csv -o /tmp/shaper_calibrate_x.png
# ~/klipper/scripts/calibrate_shaper.py /tmp/resonances_y_*.csv -o /tmp/shaper_calibrate_y.png

[gcode_macro _PRINT_AR]
description: Helper: Action response
gcode:
  {% if params.SHOW_LCD|default('false') == 'true' %}
    M117 {params.T}
  {% endif %}
  {action_respond_info(params.T)}

[gcode_shell_command plot_graph]
command: bash /home/pi/klipper/klippy/extras/plot_graph.sh
timeout: 60.0
verbose: True

#####################################################################
#  Macros
#####################################################################
# !!! This macro only works with the use of gcode_shell_command.py !!!
# you find both needed files at /klipper_config/script
#  - gcode_shell_command.py -> klipper add on file
#  - plot_graph.sh -> shell script that is executed
# 
# Setup:
#  - symlink or copy gcode_shell_command.py to /klipper/klippy/extra
#    e.g ln -s /home/pi/klipper_config/script/gcode_shell_command.py /home/pi/klipper/klippy/extras/gcode_shell_command.py
#  - klipper service restart
#
# Please inspect the shell script by yourself and use it at your own risk
# Functions:
#  - Generate folder if needed. Default path is IS_FOLDER=~/klipper_config/input_shaper
#  - Store a defined number of results for the RESONANCES_TEST/BELT_TEST. Default is STORE_RESULTS=5
#  - generate/store following files for RESONANCES_TEST:
#     - resonances_x_YYYYMMDD_HHMMSS.csv
#     - resonances_y_YYYYMMDD_HHMMSS.csv
#     - resonances_x_YYYYMMDD_HHMMSS.png
#     - resonances_y_YYYYMMDD_HHMMSS.png
#  - generate/store following files for BELT_TEST:
#     - raw_data_belt_a_YYYYMMDD_HHMMSS.csv
#     - raw_data_belt_b_YYYYMMDD_HHMMSS.csv
#     - resonances_belts_YYYYMMDD_HHMMSS.png
#  - remove files from /tmp
#####################################################################
[gcode_macro RESONANCES_TEST]
description: Run input shaper test
gcode:
#  {% set user = printer['gcode_macro _USER_VARIABLE'] %}
  HOME                                                 ; home if needed
  TURN_OFF_HEATERS                                      ; turn off heaters
  M107                                                  ; turn off fan
#  {% if user.hw.chamber.fan %} M141 {% endif %}         ; exhaust fan off
#  {% if user.hw.filter.ena %} _SET_FILTER {% endif %}   ; filter off
  _PRINT_AR T="INPUT SHAPER: Noise values, check if sensor is installed"
  MEASURE_AXES_NOISE                                    ; get noise value in log
  _PRINT_AR T="INPUT SHAPER: Resonance Tests starting"
  _PRINT_AR T="INPUT SHAPER: Mesasure X axis"
  TEST_RESONANCES AXIS=X                                ; measure X
  _PRINT_AR T="INPUT SHAPER: Mesasure Y axis"
  TEST_RESONANCES AXIS=Y                                ; measure Y
  _PRINT_AR T="INPUT SHAPER: Resonance Tests done"
  _PRINT_AR T="INPUT SHAPER: Generate graph in backround"
  RUN_SHELL_COMMAND CMD=plot_graph PARAMS=SHAPER