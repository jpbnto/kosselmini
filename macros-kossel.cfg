################################################################################
# Recommended macros and config entries if you use Mainsail or Fluidd!         #
# You can edit or delete those macros if you already defined them elsewhere!   #
################################################################################

#########################  Start Print, End Print & Flow #########################

[gcode_macro PRINT_START]
gcode:
#Get Bed and Extruder temperature from Slicer GCode
  {% set BED_TEMP = params.BED_TEMP|default(40)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(180)|float %}
  {% set FILAMENT_TYPE = params.FILAMENT_TYPE|default("PLA")|lower%}
  # end of definitions
  G28
  BED_MESH_CLEAR

  # Filament Flow Rates, Retraction & Z-Offset
  {% if 'abs' in FILAMENT_TYPE %}
    M118 ABS Filament
#    BED_MESH_PROFILE LOAD="abs"
    SET_RETRACTION RETRACT_LENGTH=1.7
    M221 S98
    SET_GCODE_OFFSET z=0.0

  {% elif 'petg' in FILAMENT_TYPE %}
    M118 PETG Filament
    BED_MESH_PROFILE LOAD="petg"
    SET_RETRACTION RETRACT_LENGTH=1.8
    M221 S102
    SET_GCODE_OFFSET z=0.0

  {% elif 'pla' in FILAMENT_TYPE %}
    M118 PLA Filament
 #   BED_MESH_PROFILE LOAD="pla"
    SET_RETRACTION RETRACT_LENGTH=1.7
    M221 S96
    SET_GCODE_OFFSET z=0.0

  {% elif 'flex' in FILAMENT_TYPE %}
    M118 TPU Filament
    BED_MESH_PROFILE LOAD="ambient"
    SET_RETRACTION RETRACT_LENGTH=1.5
    M221 S103
    SET_GCODE_OFFSET z=-0.6

  {% endif %}
  G90 ; use absolute coordinates
  M83 ; extruder relative mode
  M104 S{EXTRUDER_TEMP} T0
  #M190 S{BED_TEMP} ;M140
  #G28 ; home all axis
  M190 S{BED_TEMP}
  M109 S{EXTRUDER_TEMP} T0
  G28 ; home all axis
  G1 X0 Y-60 Z10 F2000
  G1 Z1.0 F500
  M300

[gcode_macro PRINT_END]
gcode:
  # Turn off bed, extruder, and fan
  M140 S0
  M104 S0
  M106 S0
  # Move nozzle away from print while retracting
  G91 ; use relative coordinates
 # G1 X5 Y5 E-5 F500
  G1 X5 Y5 E-10 F1000
  # Present print
  G28
  #FILAMENT_UNLOAD
  #M84
  M300

#########################  Others  #########################
[gcode_macro NOZZLE_PRIME]
gcode:
  M118 Priming...
  G91
  G1 E3 F600
  G1 E3 F120
  G90
  M118 Priming Done .
  M300

[gcode_macro NOZZLE_PURGE]
gcode:
  M118 Purging...
  G91
  G1 E15 F600
  G1 E15 F300
  G1 E15 F300
  G1 E15 F600
  G1 E15 F120
  G90
  M118 Purging Done.
  M300

[gcode_macro ZERO_XYZ]
gcode:
  M118 XYZ 0
  HOME 
  G1 Z0 F1500
  G1 X0 Y0 F6000

[gcode_macro FILAMENT_LOAD]
# Heat to 200°C then prime the nozzle
description: Load filament (heat nozzle if necessary)
gcode:
  {% set TEMP = params.EXTRUDER_TEMP|default(230)|int %}
  {% if printer[printer.toolhead.extruder].temperature < 200.0 %}
  M109 S{TEMP} T0
  M118 Set Temparature {TEMP}
#    SET_HEATER_TEMPERATURE HEATER='extruder' TARGET=200
#    TEMPERATURE_WAIT SENSOR='extruder' MINIMUM=190
  {%endif%}
  M118 Loading Filament
  M83                            ; set extruder to relative
  G1 E95 F1000
  G1 E95 F1000
  G1 E95 F1000
  G1 E95 F1000
  G1 E95 F1000
  G1 E85 F1000
  G1 E3 F150                     ; prime nozzle with filament
  M82                            ; set extruder to absolute
  M118 Loading Done.
  M300

[gcode_macro FILAMENT_UNLOAD]
# Heat to 172°C then Unload Filament
description: Unload filament (heat nozzle if necessary)
gcode:
  {% set TEMP = params.EXTRUDER_TEMP|default(172)|int %}
  {% if printer[printer.toolhead.extruder].temperature < 170.0 %}
#    SET_HEATER_TEMPERATURE HEATER='extruder' TARGET=172
#    TEMPERATURE_WAIT SENSOR='extruder' MINIMUM=172
  M109 S{TEMP} T0
  M118 Set Temparature {TEMP}
  {%endif%}
  M118 Unloading Filament
  M83                             ; set extruder to relative
  G1 E2 F150                      ; extrude a little to soften tip 
  G1 E-95 F1000                   ; retract filament completely
  G1 E-95 F1000
  G1 E-95 F1000
  G1 E-95 F1000
  G1 E-95 F1000
  G1 E-95 F1000
  M82                             ; set extruder to absolute
  TURN_OFF_HEATERS
  M118 Unloading Done.
  M300

[gcode_macro RUNOUT_FILAMENT_LOAD]
gcode:
  SAVE_GCODE_STATE NAME=LOADFILAMENT
  M118 Loading New Filament
  M83                            ; set extruder to relative
  G1 E95 F1000
  G1 E95 F1000
  G1 E95 F1000
  G1 E95 F1000
  G1 E95 F1000
  G1 E90 F1000
  G1 E2 F150                     ; prime nozzle with filament
  M82                            ; set extruder to absolute
  RESTORE_GCODE_STATE NAME=LOADFILAMENT
  M300

[gcode_macro RUNOUT_FILAMENT_UNLOAD]
gcode:
  SAVE_GCODE_STATE NAME=UNLOADFILAMENT
  M118 Change Filament
  M83                              ; set extruder to relative
  G1 E2 F150                       ; extrude a little to soften tip 
  G1 E-95 F1000                    ; retract filament completely
  G1 E-95 F1000
  G1 E-95 F1000
  G1 E-95 F1000
  G1 E-95 F1000
  G1 E-95 F1000
  RESTORE_GCODE_STATE NAME=UNLOADFILAMENT
  M300

[gcode_macro M300]
gcode:
  {% set tones = [1500, 1750, 2000] %} ; S sets the tone frequency
  {% for count in tones %}
  {% set cytime = 1 / count %}
  SET_PIN PIN=BEEPER_pin VALUE={0.5} CYCLE_TIME={cytime} ;Play tone
  G4 P50 ;tone duration
  SET_PIN PIN=BEEPER_pin VALUE=0
  {% endfor %}

#########################  Filament  #########################

[gcode_macro _FILAMENT_ABS]
gcode:
  M118 Preheating for ABS
  M104 S230
  M140 S95
  HOME
  #G1 X0 Y-40 Z150 F6000
  #M84

[gcode_macro _FILAMENT_PETG]
gcode:
  M118 Preheating for PETG
  M104 S225
  M140 S70
  HOME
  #G1 X0 Y-40 Z150 F6000
  #M84

[gcode_macro _FILAMENT_PLA]
gcode:
  M118 Preheating for PLA
  M104 S200
  M140 S60
  HOME
  #G1 X0 Y-40 Z150 F6000
  #M84

[gcode_macro _FILAMENT_PLA_F]
gcode:
  M118 Preheating for PLA-F
  M104 S210
  M140 S65
  HOME
  #G1 X0 Y-40 Z150 F6000
  #M84

[gcode_macro _FILAMENT_TPU]
gcode:
  M118 Preheating for TPU
  M104 S205
  M140 S45
  HOME
  #G1 X0 Y-40 Z70 F6000
  #M84

#########################  Turn Off  #########################

[gcode_macro OFF_FANS]
gcode:
  m107

[gcode_macro OFF_HEATERS]
gcode:
  TURN_OFF_HEATERS

[gcode_macro OFF_MOTORS]
gcode:
  M84

#########################  PID TUNING  #########################

[gcode_macro PID_Tune_Hotend]
gcode:   
    {% set tool_temp = params.TEMPERATURE|default(230)|int %}
    PID_CALIBRATE HEATER=extruder TARGET={tool_temp}

[gcode_macro PID_Tune_Bed]
gcode:
    {% set bed_temp = params.TEMPERATURE|default(80)|int %}
    PID_CALIBRATE HEATER=heater_bed TARGET={bed_temp}

#########################  Temperature Sensor  #########################

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

#[temperature_sensor mcu_temp]
#sensor_type: temperature_mcu
#min_temp: 10
#max_temp: 100

#########################  Pause, Resume, Cancel, Etc  #########################

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  # read E from pause macro
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #Get Printer built volume dimensions
  {% set X_MAX = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set Y_MAX = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set Z_MAX = printer.toolhead.axis_maximum.z|float %}
  # calculate save lift position
  {% set ACT_Z = printer.toolhead.position.z|float %}
  {% if ACT_Z < (Z_MAX - 2.0) %}
      {% set Z_SAFE = 2.0 %}
  {% else %}
      {% set Z_SAFE = Z_MAX - ACT_Z %}
  {% endif %}
  # end of definitions
  SAVE_GCODE_STATE NAME=PAUSE_state
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{Z_SAFE} F900
    G90
    G1 Y-50 F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  # read E from pause macro
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  # get VELOCITY parameter if specified
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  # end of definitions
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESTORE_GCODE_STATE NAME=PAUSE_state
  RESUME_BASE ;{get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  G91
  G1 Z5
  G90
  G28 #G1 Z{printer.toolhead.position.z + 5} F6000
  #M84 X Y E ; disable steppers

[gcode_macro HOME]
gcode:
    {% if printer.toolhead.homed_axes != "xyz" %}
        G28
    {% endif %}

[gcode_macro RESUME_RUNOUT]
gcode:
  RUNOUT_FILAMENT_LOAD
  RESUME

[gcode_macro M600]
gcode:
  M300
  PAUSE
  RUNOUT_FILAMENT_UNLOAD
  SET_IDLE_TIMEOUT TIMEOUT=3600


[gcode_macro M900]
gcode:
  {% set K = params.K|default(0)|float %}
  SET_PRESSURE_ADVANCE ADVANCE={K}

#########################  Temperature Wait  #########################

[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   ; Wait for hotend temp (within 1 degree)
    {% endif %}

[gcode_macro M190]
rename_existing: M99190
gcode:
    #Parameters
    {% set s = params.S|float %}

    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}   ; Set bed temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s} MAXIMUM={s+1}  ; Wait for bed temp (within 1 degree)
    {% endif %}

#########################  Backup Github  #########################

[gcode_shell_command backup]
command: /home/pi/scripts/klipper_backup_script/klipper_config_git_backup.sh
timeout: 30
verbose: False

[gcode_macro BACKUP_CONFIG]
gcode:
  M118 Backing Up Config to Github
  RUN_SHELL_COMMAND CMD=backup